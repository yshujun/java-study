/**
 * 变量
 */
public class Var{
    public static void main() throws Exception{
        System.out.println("Var类执行了 (变量)");
        String[] arr = {
            "关于java语言当中的变量",
            "1、什么是变量？",
            "   * 变量本质上来说是内存中的一块空间,这块空间\"有数据类型\",\"有名字\",\"有字面值\"",
            "   * 变量包含三部分: 数据类型、名称、字面值(数据)",
            "   * 变量是内存中存储数据的最基本的单元",
            "2、数据类型的作用？",
            "   * 不同的数据有不同的类型,不同的数据类型底层会分配不同大小的空间",
            "   * 数据类型是指导程序在运行阶段应该分配多大的内存空间",
            "3、变量要求: 变量中储存的具体的\"数据\"必须和变量的\"数据类型\"一致,当不一致的时候编译报错",
            "4、声明/定义变量的语法格式",
            "   数据类型 变量名",
            "5、声明变量之后怎么赋值？",
            "   语法格式:",
            "       变量名 = 字面值",
            "       要求: 字面值的数据类型必须和变量的数据类型一致",
            "       =等号是一个运算符,叫做赋值运算符,赋值运算符先运算等号右边的表达式,表达式执行结束之后的结果赋值给左边的变量",
            "6、声明和赋值可以放到一起完成",
            "   int i = 10;",
            "   赋值之后可以重新赋值，变量的值可以变化 i=20",
            "8、有了变量的概念之后,内存空间可以重复使用",
            "9、通常访问一个变量包含两种访问形式:",
            "   * 第一种: 读取变量中的保存的具体数据",
            "   * 第二种: 修改变量中的保存的具体数据",
            "10、变量在一行上可以声明多个",
            "   int a, b, c;",
            "11、java的变量必须先声明再赋值才能访问",
            "12、方法体当中的java代码,是遵循自上而下的顺序依次执行，逐行执行",
            "   特点: 第一行代码必须完整的执行之后，第二行才能执行",
            "13、在同一个\"作用域\"当中, 变量名不能重名，但是可以重新赋值。",
            "14、变量的作用域 什么是作用域?",
            "   变量的作用域就是描述变量的有效范围; 在这个范围之内是可以被访问的,只要出了这个范围变量就无法访问",
            "15、关于变量的分类",
            "   根据变量声明的位置来分类",
            "   * 局部变量",
            "       - 在方法体里面声明的变量叫局部变量",
            "   * 成员变量",
            "       - 在方法体外面【类体之内】声明的变量叫成员变量"
        };
        for (String i: arr) System.out.println(i);
    }
}